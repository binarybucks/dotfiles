## Init Zsh functions
fpath=(~/.zsh/functions $fpath)
autoload -U ~/.zsh/functions/*(:t)

## Check which host we are running on
export SHORTHOST=$(hostname -s)

## Colors
autoload -U colors && colors

## Check which host we are running on
export SHORTHOST=$(hostname -s)

## Shell promt
export PS1='%{$fg[white]%}%n@%m %{$fg[reset_color]%}%{$fg_bold[green]%}%3~%{$fg[reset_color]%} %{$fg[white]%}$(git_info_for_prompt)$(title)> '

## Window and tab title for xterm compatible shells 
#  case $TERM in
 #   screen-256color*)
 #       # Do something when in screen or tmux
#	PROMPT_COMMAND="printf '\033k$(hostname -s)\033\\';"${PROMPT_COMMAND}
#	;;
#    *)
#        precmd () {print -Pn "\e]0;%n@%m: %~\a"}
#        ;;
#  esac
#case $TERM in
#    *xterm-256color)
#	precmd () { print -Pn "\e]0;[%n@%M][%~]%#\a" }
#	preexec () { print -Pn "\e]0;[%n@%M][%~]%# ($1)\a" }
#	;;
#    *screen-256color)
#     	precmd () {print -Pn "\e]83;title \"$1\"\a" print -Pn "\e]0;$TERM - (%L) [%n@%M]%# [%~]\a"}
#	preexec () { print -Pn "\e]83;title \"$1\"\a" print -Pn "\e]0;$TERM - (%L) [%n@%M]%# [%~] ($1)\a"}
#	;;
#esac
# Prompt
#####
typeset -ga preexec_functions
typeset -ga precmd_functions

# Called in preexec() and precmd() to set the window title and screen title (if in screen/tmux)
function title() {
	# $1 - the command running. Set to zsh if nothing is
	# $2 - truncated path
	#local a
        # escape '%' chars in $1, make nonprintables visible
        #a=${(V)1//\%/\%\%}
        # Truncate command, and join lines.
        #a=$(print -Pn "$a" | tr -d "\n")
        # Remove 'sudo ' from the start of the command if it's there
        #a=${a#sudo }
	# The format depends on how we're running
        case $TERM in
        screen*)
		# We're in screen or tmux, so set the terminal title and the screen window title
		print -Pn "\033]0;(TMUX)%n@%m: %~\007"
		
		# Screen/tmux tab title
                #[[ $a = zsh ]] && print -Pn "\ek$2\e\\" # show the path if no program is running
                #[[ $a != zsh ]] && print -Pn "\ek$a\e\\" # if a program is running show that

                # Terminal title
                #if [[ -n $STY ]] ; then
                #        [[ $a = zsh ]] && print -Pn "\e]2;$SHORTHOST:S\[$WINDOW\]:$2\a"
                #        [[ $a != zsh ]] && print -Pn "\e]2;$SHORTHOST:S\[$WINDOW\]:${a//\%/\%\%}\a"
                #elif [[ -n $TMUX ]] ; then
                #        # We're running in tmux, not screen
                #        [[ $a = zsh ]] && print -Pn "\e]2;$SHORTHOST:$2\a"
                #        [[ $a != zsh ]] && print -Pn "\e]2;$SHORTHOST:${a//\%/\%\%}\a"
                #fi
                ;;
        xterm*)
                print -Pn "\033]0;%n@%m: %~\007"
		;;
        esac
}



#Set & reset the terminal title(s)
#function title_precmd() {
#        title "zsh" "%15<...<%~"
#}
#function title_preexec() {
#        title "$1" "%15<...<%~"
#}
#precmd_functions+=title_precmd
#preexec_functions+=title_preexec



## Editor, path & manpath 
  export EDITOR='vim'
  export CLASSPATH=".:/Users/alexander/Studium/Semester4/FLA/Antlr/antlr-3.4-complete.jar:$CLASSPATH:"
  export PATH="~/bin:$HOME/.scripts:/opt/local/bin:/usr/local/bin:/usr/local/sbin:/usr/texbin:/usr/local/mysql/bin:/usr/lib/ruby/gems/1.9.1:$PATH"
  export MANPATH="/usr/local/man:$MANPATH"

## Hostnames
  export HOSTNAMEPRIVATENOTEBOOK="heisenberg"
  export HOSTNAMEHOMESERVER="fortress"
  export HOSTNAMEWORKNOTEBOOK="tp"

## Custom Paths
  export SEMESTERPATH=~/Studium/Semester4
  export CODEPATH=~/Code

## Zsh historyy
  HISTFILE=~/.zsh_history
  HISTSIZE=1000
  SAVEHIST=1000

## Zsh options
  setopt NO_BG_NICE # don't nice background tasks
  setopt NO_HUP
  setopt NO_LIST_BEEP
  setopt LOCAL_OPTIONS # allow functions to have local options
  setopt LOCAL_TRAPS # allow functions to have local traps
  setopt HIST_VERIFY
  setopt SHARE_HISTORY # share history between sessions ???
  setopt PROMPT_SUBST
  setopt COMPLETE_IN_WORD
  setopt IGNORE_EOF
  setopt APPEND_HISTORY # adds history
  setopt INC_APPEND_HISTORY # adds history incrementally 
  setopt HIST_IGNORE_ALL_DUPS # don't record dupes in history
  setopt HIST_REDUCE_BLANKS
  zle -N newtab

## Key bindings
  bindkey '^R' history-incremental-search-backward
  bindkey '^A' beginning-of-line
  bindkey '^E' end-of-line
